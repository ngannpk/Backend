<?php

namespace common\models;

use Yii;
use yii\helpers\Html;
use yii\web\HttpException;
use yii\web\UploadedFile;

/**
 * This is the model class for table "{{%slider}}".
 *
 * @property int $id
 * @property string $caption Slider Caption
 * @property string $summary Slider Summary
 * @property string $link
 *
 * @property SliderImages[] $sliderImages
 */
class Slider extends \yii\db\ActiveRecord
{
    public $images_slider;
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%slider}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['caption', 'summary', 'link'], 'required'],
            [['caption', 'link'], 'string', 'max' => 100],
            [['summary'], 'string', 'max' => 300],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'caption' => 'Slider Caption',
            'summary' => 'Slider Summary',
            'link' => 'Link',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSliderImages()
    {
        return $this->hasMany(SliderImages::className(), ['slider_id' => 'id']);
    }

    public function beforeDelete()
    {
        //SliderImages::deleteAll(['slider-id'=>$this->id]);
        $anh_sliders = SliderImages::findAll(['slider_id'=>$this->id]);
        foreach ($anh_sliders as $anh_slider){
            $anh_slider->delete();
        }
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function beforeSave($insert)
    {
        $files = UploadedFile::getInstances($this,'images_slider');
        //VarDumper::dump($files, 10, true);
        //exit;
        foreach ($files as $file){
            $file_name = time().$file->name;

            $slider_images = new SliderImages();
            //$slider_images->slider_id = //$this->id; null
            $slider_images->file = $file_name;

            if ($slider_images->save()){
                $path = dirname(dirname(__DIR__)).'/images/'.$file_name;
                $file->saveAs($path);
            }
            else
                throw new HttpException(500, Html::errorSummary($slider_images));
            //VarDumper::dump($files, 10, true);
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        SliderImages::updateAll(['slider_id' => $this->id], ['is', 'slider_id', null]);
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }
}
